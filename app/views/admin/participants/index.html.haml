- @page_title = "Participants for #{current_survey.name}"
%h2 
  Participants for 
  %a{href: admin_survey_path(current_survey)}
    #{current_survey.name}
%a.btn.btn-primary{href: new_admin_survey_participant_path(current_survey)}
  Add a participant


%div.alert
  =flash[:save_message]
- if @participant.errors.any?
  %div.alert.alert-danger
    %ul
      - @participant.errors.full_messages.each do |m|
        %li= m

%table.listing
  %tr
    %th Phone number
    - if current_survey.type != "AfchronGameSurvey"
      %th Active
      %th Login code
    %th Participant key
    %th Start date
    %th End date
    %th Days complete
    - if current_survey.type == "AfchronGameSurvey"
      %th Games complete
      %th Balance
    %th
    %th
    %th
    %th
  - current_survey.participants.each do |participant|
    %tr
      %td= participant.phone_number.humanize
      - if current_survey.type != "AfchronGameSurvey"
        %td= participant.active?
        %td= participant.login_code
      %td= participant.external_key
      - if participant.schedule_days.count > 0
        %td= participant.schedule_days.first.participant_local_date
        %td= participant.schedule_days.last.participant_local_date
      - else
        %td None
        %td None
      %td= participant.schedule_days.finished.count
      - if current_survey.type == "AfchronGameSurvey"
        %td= participant.state['game_completed_results'].count
        %td= participant.state['game_balance']
      %td
        %a.btn.btn-warning{href: edit_admin_survey_participant_path(current_survey, participant)}
          Edit
      %td
        %a.btn.btn-primary{href: admin_survey_participant_path(current_survey, participant)}
          View
      %td
        %a.btn.btn-dark{href: admin_survey_participant_simulate_path(current_survey, participant)}
          Simulator
      %td
        %a.btn.btn-secondary{href: admin_survey_participant_path(current_survey, participant, format: :csv)}
          Download
